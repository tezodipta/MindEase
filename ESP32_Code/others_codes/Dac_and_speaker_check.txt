#include <Arduino.h>
#include <driver/i2s.h>

// MAX98357A pins
#define I2S_DOUT 22 // DIN
#define I2S_BCLK 15 // BCLK
#define I2S_LRC  21 // LRC

void playTone(int freq, int durationMs);  // Forward declaration

void setup() {
  Serial.begin(115200);
  Serial.println("Starting I2S tone test...");

  i2s_config_t i2s_config = {
    .mode = (i2s_mode_t)(I2S_MODE_MASTER | I2S_MODE_TX),
    .sample_rate = 16000,
    .bits_per_sample = I2S_BITS_PER_SAMPLE_16BIT,
    .channel_format = I2S_CHANNEL_FMT_ONLY_LEFT,
    .communication_format = I2S_COMM_FORMAT_STAND_I2S, // Avoid deprecated warning
    .intr_alloc_flags = 0,
    .dma_buf_count = 4,
    .dma_buf_len = 256,
    .use_apll = false,
    .tx_desc_auto_clear = true,
    .fixed_mclk = 0
  };

  i2s_pin_config_t pin_config = {
    .bck_io_num = I2S_BCLK,
    .ws_io_num = I2S_LRC,
    .data_out_num = I2S_DOUT,
    .data_in_num = -1
  };

  i2s_driver_install(I2S_NUM_0, &i2s_config, 0, NULL);
  i2s_set_pin(I2S_NUM_0, &pin_config);
  i2s_zero_dma_buffer(I2S_NUM_0);

  // Play a test tone: 440Hz for 2 seconds
  playTone(440, 2000);
}

void loop() {
  // nothing
}

void playTone(int freq, int durationMs) {
  const int sampleRate = 16000;
  const int samples = (sampleRate * durationMs) / 1000;
  const int halfPeriod = sampleRate / (freq * 2);
  int16_t sample = 8000;
  int16_t buffer[1];
  size_t bytesWritten;

  for (int i = 0; i < samples; i++) {
    if ((i / halfPeriod) % 2 == 0)
      buffer[0] = sample;
    else
      buffer[0] = -sample;

    i2s_write(I2S_NUM_0, buffer, sizeof(buffer), &bytesWritten, portMAX_DELAY);
  }

  delay(100);
  Serial.println("Tone playback done");
}
